swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /articulo/:
    get:
      tags:
      - articulo
      description: get Articulo
      operationId: ArticuloController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Articulo'
        "403":
          description: ""
    post:
      tags:
      - articulo
      description: create Articulo
      operationId: ArticuloController.Post
      parameters:
      - in: body
        name: body
        description: body for Articulo content
        required: true
        schema:
          $ref: '#/definitions/models.Articulo'
      responses:
        "201":
          description: '{int} models.Articulo'
        "403":
          description: body is empty
  /articulo/{id}:
    get:
      tags:
      - articulo
      description: get Articulo by id
      operationId: ArticuloController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Articulo'
        "403":
          description: :id is empty
    put:
      tags:
      - articulo
      description: update the Articulo
      operationId: ArticuloController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Articulo content
        required: true
        schema:
          $ref: '#/definitions/models.Articulo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Articulo'
        "403":
          description: :id is not int
    delete:
      tags:
      - articulo
      description: delete the Articulo
      operationId: ArticuloController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /libro/:
    get:
      tags:
      - libro
      description: get Libro
      operationId: LibroController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Libro'
        "403":
          description: ""
    post:
      tags:
      - libro
      description: create Libro
      operationId: LibroController.Post
      parameters:
      - in: body
        name: body
        description: body for Libro content
        required: true
        schema:
          $ref: '#/definitions/models.Libro'
      responses:
        "201":
          description: '{int} models.Libro'
        "403":
          description: body is empty
  /libro/{id}:
    get:
      tags:
      - libro
      description: get Libro by id
      operationId: LibroController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Libro'
        "403":
          description: :id is empty
    put:
      tags:
      - libro
      description: update the Libro
      operationId: LibroController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Libro content
        required: true
        schema:
          $ref: '#/definitions/models.Libro'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Libro'
        "403":
          description: :id is not int
    delete:
      tags:
      - libro
      description: delete the Libro
      operationId: LibroController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /medio_divulgacion/:
    get:
      tags:
      - medio_divulgacion
      description: get MedioDivulgacion
      operationId: MedioDivulgacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedioDivulgacion'
        "403":
          description: ""
    post:
      tags:
      - medio_divulgacion
      description: create MedioDivulgacion
      operationId: MedioDivulgacionController.Post
      parameters:
      - in: body
        name: body
        description: body for MedioDivulgacion content
        required: true
        schema:
          $ref: '#/definitions/models.MedioDivulgacion'
      responses:
        "201":
          description: '{int} models.MedioDivulgacion'
        "403":
          description: body is empty
  /medio_divulgacion/{id}:
    get:
      tags:
      - medio_divulgacion
      description: get MedioDivulgacion by id
      operationId: MedioDivulgacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedioDivulgacion'
        "403":
          description: :id is empty
    put:
      tags:
      - medio_divulgacion
      description: update the MedioDivulgacion
      operationId: MedioDivulgacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for MedioDivulgacion content
        required: true
        schema:
          $ref: '#/definitions/models.MedioDivulgacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedioDivulgacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - medio_divulgacion
      description: delete the MedioDivulgacion
      operationId: MedioDivulgacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /medio_publicacion/:
    get:
      tags:
      - medio_publicacion
      description: get MedioPublicacion
      operationId: MedioPublicacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedioPublicacion'
        "403":
          description: ""
    post:
      tags:
      - medio_publicacion
      description: create MedioPublicacion
      operationId: MedioPublicacionController.Post
      parameters:
      - in: body
        name: body
        description: body for MedioPublicacion content
        required: true
        schema:
          $ref: '#/definitions/models.MedioPublicacion'
      responses:
        "201":
          description: '{int} models.MedioPublicacion'
        "403":
          description: body is empty
  /medio_publicacion/{id}:
    get:
      tags:
      - medio_publicacion
      description: get MedioPublicacion by id
      operationId: MedioPublicacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedioPublicacion'
        "403":
          description: :id is empty
    put:
      tags:
      - medio_publicacion
      description: update the MedioPublicacion
      operationId: MedioPublicacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for MedioPublicacion content
        required: true
        schema:
          $ref: '#/definitions/models.MedioPublicacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedioPublicacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - medio_publicacion
      description: delete the MedioPublicacion
      operationId: MedioPublicacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /otra_publicacion/:
    get:
      tags:
      - otra_publicacion
      description: get OtraPublicacion
      operationId: OtraPublicacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OtraPublicacion'
        "403":
          description: ""
    post:
      tags:
      - otra_publicacion
      description: create OtraPublicacion
      operationId: OtraPublicacionController.Post
      parameters:
      - in: body
        name: body
        description: body for OtraPublicacion content
        required: true
        schema:
          $ref: '#/definitions/models.OtraPublicacion'
      responses:
        "201":
          description: '{int} models.OtraPublicacion'
        "403":
          description: body is empty
  /otra_publicacion/{id}:
    get:
      tags:
      - otra_publicacion
      description: get OtraPublicacion by id
      operationId: OtraPublicacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OtraPublicacion'
        "403":
          description: :id is empty
    put:
      tags:
      - otra_publicacion
      description: update the OtraPublicacion
      operationId: OtraPublicacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for OtraPublicacion content
        required: true
        schema:
          $ref: '#/definitions/models.OtraPublicacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OtraPublicacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - otra_publicacion
      description: delete the OtraPublicacion
      operationId: OtraPublicacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /otro_documento/:
    get:
      tags:
      - otro_documento
      description: get OtroDocumento
      operationId: OtroDocumentoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OtroDocumento'
        "403":
          description: ""
    post:
      tags:
      - otro_documento
      description: create OtroDocumento
      operationId: OtroDocumentoController.Post
      parameters:
      - in: body
        name: body
        description: body for OtroDocumento content
        required: true
        schema:
          $ref: '#/definitions/models.OtroDocumento'
      responses:
        "201":
          description: '{int} models.OtroDocumento'
        "403":
          description: body is empty
  /otro_documento/{id}:
    get:
      tags:
      - otro_documento
      description: get OtroDocumento by id
      operationId: OtroDocumentoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OtroDocumento'
        "403":
          description: :id is empty
    put:
      tags:
      - otro_documento
      description: update the OtroDocumento
      operationId: OtroDocumentoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for OtroDocumento content
        required: true
        schema:
          $ref: '#/definitions/models.OtroDocumento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OtroDocumento'
        "403":
          description: :id is not int
    delete:
      tags:
      - otro_documento
      description: delete the OtroDocumento
      operationId: OtroDocumentoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /produccion_artes_arqu_diseno/:
    get:
      tags:
      - produccion_artes_arqu_diseno
      description: get ProduccionArtesArquDiseno
      operationId: ProduccionArtesArquDisenoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProduccionArtesArquDiseno'
        "403":
          description: ""
    post:
      tags:
      - produccion_artes_arqu_diseno
      description: create ProduccionArtesArquDiseno
      operationId: ProduccionArtesArquDisenoController.Post
      parameters:
      - in: body
        name: body
        description: body for ProduccionArtesArquDiseno content
        required: true
        schema:
          $ref: '#/definitions/models.ProduccionArtesArquDiseno'
      responses:
        "201":
          description: '{int} models.ProduccionArtesArquDiseno'
        "403":
          description: body is empty
  /produccion_artes_arqu_diseno/{id}:
    get:
      tags:
      - produccion_artes_arqu_diseno
      description: get ProduccionArtesArquDiseno by id
      operationId: ProduccionArtesArquDisenoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProduccionArtesArquDiseno'
        "403":
          description: :id is empty
    put:
      tags:
      - produccion_artes_arqu_diseno
      description: update the ProduccionArtesArquDiseno
      operationId: ProduccionArtesArquDisenoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ProduccionArtesArquDiseno content
        required: true
        schema:
          $ref: '#/definitions/models.ProduccionArtesArquDiseno'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProduccionArtesArquDiseno'
        "403":
          description: :id is not int
    delete:
      tags:
      - produccion_artes_arqu_diseno
      description: delete the ProduccionArtesArquDiseno
      operationId: ProduccionArtesArquDisenoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /produccion_tecnica/:
    get:
      tags:
      - produccion_tecnica
      description: get ProduccionTecnica
      operationId: ProduccionTecnicaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProduccionTecnica'
        "403":
          description: ""
    post:
      tags:
      - produccion_tecnica
      description: create ProduccionTecnica
      operationId: ProduccionTecnicaController.Post
      parameters:
      - in: body
        name: body
        description: body for ProduccionTecnica content
        required: true
        schema:
          $ref: '#/definitions/models.ProduccionTecnica'
      responses:
        "201":
          description: '{int} models.ProduccionTecnica'
        "403":
          description: body is empty
  /produccion_tecnica/{id}:
    get:
      tags:
      - produccion_tecnica
      description: get ProduccionTecnica by id
      operationId: ProduccionTecnicaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProduccionTecnica'
        "403":
          description: :id is empty
    put:
      tags:
      - produccion_tecnica
      description: update the ProduccionTecnica
      operationId: ProduccionTecnicaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ProduccionTecnica content
        required: true
        schema:
          $ref: '#/definitions/models.ProduccionTecnica'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProduccionTecnica'
        "403":
          description: :id is not int
    delete:
      tags:
      - produccion_tecnica
      description: delete the ProduccionTecnica
      operationId: ProduccionTecnicaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_articulo/:
    get:
      tags:
      - tipo_articulo
      description: get TipoArticulo
      operationId: TipoArticuloController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoArticulo'
        "403":
          description: ""
    post:
      tags:
      - tipo_articulo
      description: create TipoArticulo
      operationId: TipoArticuloController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoArticulo content
        required: true
        schema:
          $ref: '#/definitions/models.TipoArticulo'
      responses:
        "201":
          description: '{int} models.TipoArticulo'
        "403":
          description: body is empty
  /tipo_articulo/{id}:
    get:
      tags:
      - tipo_articulo
      description: get TipoArticulo by id
      operationId: TipoArticuloController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoArticulo'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_articulo
      description: update the TipoArticulo
      operationId: TipoArticuloController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoArticulo content
        required: true
        schema:
          $ref: '#/definitions/models.TipoArticulo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoArticulo'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_articulo
      description: delete the TipoArticulo
      operationId: TipoArticuloController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_disciplina/:
    get:
      tags:
      - tipo_disciplina
      description: get TipoDisciplina
      operationId: TipoDisciplinaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoDisciplina'
        "403":
          description: ""
    post:
      tags:
      - tipo_disciplina
      description: create TipoDisciplina
      operationId: TipoDisciplinaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoDisciplina content
        required: true
        schema:
          $ref: '#/definitions/models.TipoDisciplina'
      responses:
        "201":
          description: '{int} models.TipoDisciplina'
        "403":
          description: body is empty
  /tipo_disciplina/{id}:
    get:
      tags:
      - tipo_disciplina
      description: get TipoDisciplina by id
      operationId: TipoDisciplinaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoDisciplina'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_disciplina
      description: update the TipoDisciplina
      operationId: TipoDisciplinaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoDisciplina content
        required: true
        schema:
          $ref: '#/definitions/models.TipoDisciplina'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoDisciplina'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_disciplina
      description: delete the TipoDisciplina
      operationId: TipoDisciplinaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_otra_publicacion/:
    get:
      tags:
      - tipo_otra_publicacion
      description: get TipoOtraPublicacion
      operationId: TipoOtraPublicacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoOtraPublicacion'
        "403":
          description: ""
    post:
      tags:
      - tipo_otra_publicacion
      description: create TipoOtraPublicacion
      operationId: TipoOtraPublicacionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoOtraPublicacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoOtraPublicacion'
      responses:
        "201":
          description: '{int} models.TipoOtraPublicacion'
        "403":
          description: body is empty
  /tipo_otra_publicacion/{id}:
    get:
      tags:
      - tipo_otra_publicacion
      description: get TipoOtraPublicacion by id
      operationId: TipoOtraPublicacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoOtraPublicacion'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_otra_publicacion
      description: update the TipoOtraPublicacion
      operationId: TipoOtraPublicacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoOtraPublicacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoOtraPublicacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoOtraPublicacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_otra_publicacion
      description: delete the TipoOtraPublicacion
      operationId: TipoOtraPublicacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_produccion_tecnica/:
    get:
      tags:
      - tipo_produccion_tecnica
      description: get TipoProduccionTecnica
      operationId: TipoProduccionTecnicaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoProduccionTecnica'
        "403":
          description: ""
    post:
      tags:
      - tipo_produccion_tecnica
      description: create TipoProduccionTecnica
      operationId: TipoProduccionTecnicaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoProduccionTecnica content
        required: true
        schema:
          $ref: '#/definitions/models.TipoProduccionTecnica'
      responses:
        "201":
          description: '{int} models.TipoProduccionTecnica'
        "403":
          description: body is empty
  /tipo_produccion_tecnica/{id}:
    get:
      tags:
      - tipo_produccion_tecnica
      description: get TipoProduccionTecnica by id
      operationId: TipoProduccionTecnicaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoProduccionTecnica'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_produccion_tecnica
      description: update the TipoProduccionTecnica
      operationId: TipoProduccionTecnicaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoProduccionTecnica content
        required: true
        schema:
          $ref: '#/definitions/models.TipoProduccionTecnica'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoProduccionTecnica'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_produccion_tecnica
      description: delete the TipoProduccionTecnica
      operationId: TipoProduccionTecnicaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_publicacion_libro/:
    get:
      tags:
      - tipo_publicacion_libro
      description: get TipoPublicacionLibro
      operationId: TipoPublicacionLibroController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPublicacionLibro'
        "403":
          description: ""
    post:
      tags:
      - tipo_publicacion_libro
      description: create TipoPublicacionLibro
      operationId: TipoPublicacionLibroController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoPublicacionLibro content
        required: true
        schema:
          $ref: '#/definitions/models.TipoPublicacionLibro'
      responses:
        "201":
          description: '{int} models.TipoPublicacionLibro'
        "403":
          description: body is empty
  /tipo_publicacion_libro/{id}:
    get:
      tags:
      - tipo_publicacion_libro
      description: get TipoPublicacionLibro by id
      operationId: TipoPublicacionLibroController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPublicacionLibro'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_publicacion_libro
      description: update the TipoPublicacionLibro
      operationId: TipoPublicacionLibroController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoPublicacionLibro content
        required: true
        schema:
          $ref: '#/definitions/models.TipoPublicacionLibro'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPublicacionLibro'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_publicacion_libro
      description: delete the TipoPublicacionLibro
      operationId: TipoPublicacionLibroController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_traduccion/:
    get:
      tags:
      - tipo_traduccion
      description: get TipoTraduccion
      operationId: TipoTraduccionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoTraduccion'
        "403":
          description: ""
    post:
      tags:
      - tipo_traduccion
      description: create TipoTraduccion
      operationId: TipoTraduccionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoTraduccion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoTraduccion'
      responses:
        "201":
          description: '{int} models.TipoTraduccion'
        "403":
          description: body is empty
  /tipo_traduccion/{id}:
    get:
      tags:
      - tipo_traduccion
      description: get TipoTraduccion by id
      operationId: TipoTraduccionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoTraduccion'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_traduccion
      description: update the TipoTraduccion
      operationId: TipoTraduccionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoTraduccion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoTraduccion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoTraduccion'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_traduccion
      description: delete the TipoTraduccion
      operationId: TipoTraduccionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /traduccion/:
    get:
      tags:
      - traduccion
      description: get Traduccion
      operationId: TraduccionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Traduccion'
        "403":
          description: ""
    post:
      tags:
      - traduccion
      description: create Traduccion
      operationId: TraduccionController.Post
      parameters:
      - in: body
        name: body
        description: body for Traduccion content
        required: true
        schema:
          $ref: '#/definitions/models.Traduccion'
      responses:
        "201":
          description: '{int} models.Traduccion'
        "403":
          description: body is empty
  /traduccion/{id}:
    get:
      tags:
      - traduccion
      description: get Traduccion by id
      operationId: TraduccionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Traduccion'
        "403":
          description: :id is empty
    put:
      tags:
      - traduccion
      description: update the Traduccion
      operationId: TraduccionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Traduccion content
        required: true
        schema:
          $ref: '#/definitions/models.Traduccion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Traduccion'
        "403":
          description: :id is not int
    delete:
      tags:
      - traduccion
      description: delete the Traduccion
      operationId: TraduccionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.Articulo:
    title: Articulo
    type: object
    properties:
      Ano:
        type: integer
        format: int64
      Doi:
        type: string
      Fasciculo:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Idioma:
        type: string
      MedioDivulgacion:
        $ref: '#/definitions/models.MedioDivulgacion'
      Mes:
        type: integer
        format: int64
      Nombre:
        type: string
      Persona:
        type: integer
        format: int64
      Revista:
        type: string
      Serie:
        type: integer
        format: int64
      Tipo:
        $ref: '#/definitions/models.TipoArticulo'
      Ubicacion:
        type: integer
        format: int64
      Url:
        type: string
      Volumen:
        type: integer
        format: int64
  models.Libro:
    title: Libro
    type: object
    properties:
      Ano:
        type: integer
        format: int64
      Editorial:
        type: string
      Id:
        type: integer
        format: int64
      Isbn:
        type: integer
        format: int64
      MedioDivulgacion:
        $ref: '#/definitions/models.MedioDivulgacion'
      MedioPublicacion:
        $ref: '#/definitions/models.MedioPublicacion'
      Mes:
        type: integer
        format: int64
      Paginas:
        type: integer
        format: int64
      Persona:
        type: integer
        format: int64
      TipoPublicacion:
        $ref: '#/definitions/models.TipoPublicacionLibro'
      TituloCapitulo:
        type: string
      TituloLibro:
        type: string
      Ubicacion:
        type: integer
        format: int64
  models.MedioDivulgacion:
    title: MedioDivulgacion
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: integer
        format: int64
  models.MedioPublicacion:
    title: MedioPublicacion
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: integer
        format: int64
  models.OtraPublicacion:
    title: OtraPublicacion
    type: object
    properties:
      Ano:
        type: integer
        format: int64
      Autor:
        type: string
      Id:
        type: integer
        format: int64
      Mes:
        type: integer
        format: int64
      Persona:
        type: integer
        format: int64
      Tipo:
        $ref: '#/definitions/models.TipoOtraPublicacion'
      Titulo:
        type: string
  models.OtroDocumento:
    title: OtroDocumento
    type: object
    properties:
      Ano:
        type: integer
        format: int64
      Doi:
        type: string
      Id:
        type: integer
        format: int64
      Mes:
        type: integer
        format: int64
      NumeroPaginas:
        type: integer
        format: int64
      Persona:
        type: integer
        format: int64
      Titulo:
        type: string
      Url:
        type: string
  models.ProduccionArtesArquDiseno:
    title: ProduccionArtesArquDiseno
    type: object
    properties:
      Ano:
        type: integer
        format: int64
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Mes:
        type: integer
        format: int64
      Nombre:
        type: string
      Persona:
        type: integer
        format: int64
      TipoDisciplina:
        $ref: '#/definitions/models.TipoDisciplina'
  models.ProduccionTecnica:
    title: ProduccionTecnica
    type: object
    properties:
      Ano:
        type: integer
        format: int64
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Mes:
        type: integer
        format: int64
      Nombre:
        type: string
      Persona:
        type: integer
        format: int64
      TipoProduccionTecnica:
        $ref: '#/definitions/models.TipoProduccionTecnica'
      Ubicacion:
        type: integer
        format: int64
  models.TipoArticulo:
    title: TipoArticulo
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: integer
        format: int64
  models.TipoDisciplina:
    title: TipoDisciplina
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: integer
        format: int64
  models.TipoOtraPublicacion:
    title: TipoOtraPublicacion
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: integer
        format: int64
  models.TipoProduccionTecnica:
    title: TipoProduccionTecnica
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: integer
        format: int64
  models.TipoPublicacionLibro:
    title: TipoPublicacionLibro
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: integer
        format: int64
  models.TipoTraduccion:
    title: TipoTraduccion
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: integer
        format: int64
  models.Traduccion:
    title: Traduccion
    type: object
    properties:
      Ano:
        type: integer
        format: int64
      Autor:
        type: string
      Edicion:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      IdiomaOriginal:
        type: integer
        format: int64
      IdiomaTraducido:
        type: integer
        format: int64
      MedioDivulgacion:
        $ref: '#/definitions/models.MedioDivulgacion'
      Mes:
        type: integer
        format: int64
      NombreOriginal:
        type: string
      Persona:
        type: integer
        format: int64
      Serie:
        type: integer
        format: int64
      TipoTraduccion:
        $ref: '#/definitions/models.TipoTraduccion'
      Titulo:
        type: string
tags:
- name: tipo_otra_publicacion
  description: |
    TipoOtraPublicacionController operations for TipoOtraPublicacion
- name: tipo_produccion_tecnica
  description: |
    TipoProduccionTecnicaController operations for TipoProduccionTecnica
- name: libro
  description: |
    LibroController operations for Libro
- name: otro_documento
  description: |
    OtroDocumentoController operations for OtroDocumento
- name: produccion_tecnica
  description: |
    ProduccionTecnicaController operations for ProduccionTecnica
- name: otra_publicacion
  description: |
    OtraPublicacionController operations for OtraPublicacion
- name: traduccion
  description: |
    TraduccionController operations for Traduccion
- name: tipo_disciplina
  description: |
    TipoDisciplinaController operations for TipoDisciplina
- name: tipo_traduccion
  description: |
    TipoTraduccionController operations for TipoTraduccion
- name: articulo
  description: |
    ArticuloController operations for Articulo
- name: produccion_artes_arqu_diseno
  description: |
    ProduccionArtesArquDisenoController operations for ProduccionArtesArquDiseno
- name: tipo_articulo
  description: |
    TipoArticuloController operations for TipoArticulo
- name: medio_divulgacion
  description: |
    MedioDivulgacionController operations for MedioDivulgacion
- name: medio_publicacion
  description: |
    MedioPublicacionController operations for MedioPublicacion
- name: tipo_publicacion_libro
  description: |
    TipoPublicacionLibroController operations for TipoPublicacionLibro
